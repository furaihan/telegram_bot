:local send [:parse [/system script get tg_sendMessage source]]
:local gkey [:parse [/system script get tg_getkey source]]
:local tolower [:parse [/system script get func_lowercase source]]
:local param1 [:pick $params 0 [:find $params " "]]
:local param2 [:pick $params ([:find $params " "]+1) [:len $params]]
:local param3 [:pick [:pick $params ([:find $params " "]+1) [:len $params]] ([:find [:pick $params ([:find $params " "]+1) [:len $params]] " "]+1) [:len [:pick $params ([:find $params " "]+1) [:len $params]]]]
:if ([:len [:find $param2 " "]]>0) do={
	:set param2 [:pick [:pick $params ([:find $params " "]+1) [:len $params]] 0 [:find [:pick $params ([:find $params " "]+1) [:len $params]] " "]]
} else={
	:set param3 ""
}

#check language quran file availability
:local fileName ("quran-lang-data.txt");
:if ([:len [/file find where name=$fileName]] < 1) do={
    /system identity print file=$fileName
    :delay 1500ms;
    /file set $fileName contents="en"
}
:local ayat {"1"="7"; "2"="286"; "3"="200"; "4"="176"; "5"="120"; "6"="165"; "7"="206"; "8"="75"; "9"="129"; "10"="109"; "11"="123"; "12"="111"; "13"="43"; "14"="52";\
             "15"="99"; "16"="128"; "17"="111"; "18"="110"; "19"="98"; "20"="135"; "21"="112"; "22"="78"; "23"="118"; "24"="64"; "25"="77"; "26"="227"; "27"="93"; "28"="88";\
              "29"="69"; "30"="60"; "31"="34"; "32"="30"; "33"="73"; "34"="54"; "35"="45"; "36"="83"; "37"="182"; "38"="88"; "39"="75"; "40"="85"; "41"="54"; "42"="53";\
             "43"="89"; "44"="59"; "45"="37"; "46"="35"; "47"="38"; "48"="29"; "49"="18"; "50"="45"; "51"="60"; "52"="49"; "53"="62"; "54"="55"; "55"="78"; "56"="96";\
              "57"="29"; "58"="22"; "59"="24"; "60"="13"; "61"="14"; "62"="11"; "63"="11"; "64"="18"; "65"="12"; "66"="12"; "67"="30"; "68"="52"; "69"="52"; "70"="44";\
               "71"="28"; "72"="28"; "73"="20"; "74"="56"; "75"="40"; "76"="31"; "77"="50"; "78"="40"; "79"="46"; "80"="42"; "81"="29"; "82"="19"; "83"="36"; "84"="25";\
             "85"="22"; "86"="17"; "87"="19"; "88"="26"; "89"="30"; "90"="20"; "91"="15"; "92"="21"; "93"="11"; "94"="8"; "95"="8"; "96"="19"; "97"="5"; "98"="8"; "99"="8";\
              "100"="11"; "101"="11"; "102"="8"; "103"="3"; "104"="9"; "105"="5"; "106"="4"; "107"="7"; "108"="3"; "109"="6"; "110"="3"; "111"="5"; "112"="4"; "113"="5"; "114"="6"}
:local listLang [:toarray ("al","ar","az","en","fr","de","id")]
:local paramsLower [$tolower $params];

:local sendHelp do={
    :local send [:parse [/system script get tg_sendMessage source]]
    :local txt ("")
    $send chat=$chatid text=$txt mode="Markdown"
}

:if ($paramsLower = "help") do={
    $sendHelp
}
:local dataFileName ("quran-json.txt");
:local randSurah;
:local randAyah;
:if (([:len $params] < 1) and ($paramsLower != "help") and ($paramsLower != "change-language")) do={
    :do {:set randSurah ([/tool fetch url="https://www.random.org/integers/\?num=1&min=1&max=114&col=1&base=10&format=plain&rnd=new" output=user as-value]->"data")} on-error={
        $send chat=$chatid text=("Something went wrong, Failed to fetch random <1>") mode="Markdown"; :return -1
    }
    :local toAyat ($ayat->[:pick $randSurah 0 ([:len $randSurah] - 1)])
    :do {:set randAyah ([/tool fetch url="https://www.random.org/integers/\?num=1&min=1&max=$toAyat&col=1&base=10&format=plain&rnd=new" output=user as-value]->"data")} on-error={
        $send chat=$chatid text=("Something went wrong, Failed to fetch random <2>") mode="Markdown"; :return -2
    }
    :local language [/file get $fileName contents]
    :local uri ("https://api.banghasan.com/quran/format/json/surat/$[:pick $randSurah 0 ([:len $randSurah] - 1)]/ayat/$[[:pick $randAyah 0 ([:len $randAyah] - 1)]]/bahasa/$language")
    :do {/tool fetch dst-path=$dataFileName url=$uri} on-error={$send chat=$chatid text=("Something went wrong, Failed to fetch quran data") mode="Markdown"; :return -3}
    :local jsonData [/file get $dataFileName contents]
    
} else={
    :if (($paramsLower != "help" )and ($paramsLower != "change-language")) do={
        $sendHelp
    }
}

:if ($paramsLower = "change-language") do={
}

[:pick $jsonData ([:find $jsonData "teks"] + [:len "teks"] + 4) ([:len $jsonData] - 53)]